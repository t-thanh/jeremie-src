<launch>

	<arg name="gcs_url" default="tcp-l://" />
	<arg name="tgt_system" default="" />
	<arg name="tgt_component" default="" />
	<arg name="pluginlists_yaml" value="$(find mrs_uav_general)/config/px4_pluginlists.yaml" />
	<arg name="log_output" default="screen" />
	<arg name="fcu_protocol" default="v2.0" />
	<arg name="respawn_mavros" default="false" />

	<arg name="OLD_PX4_FW" default="$(optenv OLD_PX4_FW false)" />

	<arg if="$(eval arg('OLD_PX4_FW') == 0)" name="config_yaml" value="$(find mrs_uav_general)/config/px4_config.yaml" />
  <arg if="$(eval arg('OLD_PX4_FW') == 1)" name="config_yaml" value="$(find mrs_uav_general)/config/px4_config_old.yaml" />

	<arg if="$(eval arg('OLD_PX4_FW') == 0)" name="fcu_url" value="/dev/pixhawk:2000000" />
	<arg if="$(eval arg('OLD_PX4_FW') == 1)" name="fcu_url" value="/dev/pixhawk:921600" />

  <arg name="UAV_NAME" default="$(env UAV_NAME)" />

  <group ns="$(arg UAV_NAME)">

		<node pkg="mavros" type="mavros_node" name="mavros" required="$(eval not respawn_mavros)" clear_params="true" output="$(arg log_output)" respawn="$(arg respawn_mavros)">

			<param name="fcu_url" value="$(arg fcu_url)" />
			<param name="gcs_url" value="$(arg gcs_url)" />
			<param name="target_system_id" value="$(arg tgt_system)" />
			<param name="target_component_id" value="$(arg tgt_component)" />
			<param name="fcu_protocol" value="$(arg fcu_protocol)" />

			<param name="distance_sensor/garmin/frame_id" value="$(arg UAV_NAME)/garmin" />

			<!-- load blacklist, config -->
			<rosparam command="load" file="$(arg pluginlists_yaml)" />
			<rosparam command="load" file="$(arg config_yaml)" />

			<!-- prevent all uavs from publishing to the same diagnostics topic -->
			<remap from="/diagnostics" to="/$(arg UAV_NAME)/diagnostics" />

		</node>

  </group>

</launch>
